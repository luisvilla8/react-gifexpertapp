{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","request","json","data","gifsInfo","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,UACI,6BAAMD,IAEN,uBACIQ,KAAK,OACLC,MAAQT,EACRU,SApBmB,SAAEP,GAC7BF,EAAeE,EAAEQ,OAAOF,c,+BCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGGI,MAAOF,GAHV,cAGbG,EAHa,gBAIIA,EAAQC,OAJZ,uBAIXC,EAJW,EAIXA,KAEFC,EAAWD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAEvB,ECLwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAACqB,KAAM,GAAIa,SAAS,IAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,qBAAU,WACNxB,EAASC,GACRwB,MAAM,SAAAC,GACHC,YAAW,WACPC,QAAQC,IAAKH,GACbH,EAAS,CACLf,KAAMkB,EACNL,SAAU,MAEf,UAET,CAAEpB,IAEGqB,EDX0BQ,CAAc7B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,mCAAOpB,EAAP,OACA,qBAAIgB,UAAU,mCAAd,cAAoDI,GAAW,sBAA/D,OACA,qBAAKJ,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEavBmB,EA7BM,WAGjB,MAAoC5C,mBAAS,CAAC,SAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAEA,6BACM8C,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCnBnCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.980074b1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputvalue, setinputvalue] = useState('')\r\n\r\n    const handleChangeInputValue = ( e ) => {\r\n        setinputvalue( e.target.value );\r\n        // console.log( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if(inputvalue.trim().length > 2) {\r\n            setCategories( cats => [inputvalue,...cats]);\r\n            setinputvalue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <h2>{ inputvalue }</h2>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={ inputvalue }\r\n                onChange={ handleChangeInputValue }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async ( category ) => { \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=1JQ7b7fvr6nTdyDr9frOdwf3WOCcrBsf`;\r\n    const request = await fetch( url );\r\n    const { data } = await request.json();\r\n\r\n    const gifsInfo = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifsInfo;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    // console.log(url);\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/*, { useEffect, useState }*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n            <h3 className=\"animate__animated animate__jello\"> { loading && \"C A R G A N D O ...\" } </h3>\r\n            <div className=\"card-grid\">\r\n                {/* <h4>{ count }</h4>\r\n                <button onClick={ () => setCount( count + 1)}>+1</button> */}\r\n                { \r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({data: [], loading: true});\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setTimeout(() => {   \r\n                console.log( imgs );\r\n                setState({\r\n                    data: imgs,\r\n                    loading : false\r\n                });\r\n            }, 3000)\r\n        })\r\n    },[ category ]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import ReactDOM from 'react-dom'\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    // const categories = ['Goku','Vegetta','Piccolo'];\r\n    const [categories, setCategories] = useState(['Goku']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories, 'Gohan'] );\r\n    //     // setCategories( categories.concat('Gohan'));\r\n    // }\r\n\r\n    return(\r\n        <> \r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories= { setCategories }/>\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                { categories.map( category => \r\n                    <GifGrid key={ category } category={ category }/>    \r\n                )}\r\n            </ol>\r\n\r\n            {/* <button onClick={ handleAdd }>ADD</button> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}